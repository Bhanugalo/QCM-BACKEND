--
-- Script was generated by Devart dbForge Studio for MySQL, Version 10.0.150.0
-- Product home page: http://www.devart.com/dbforge/mysql/studio
-- Script date 28-03-2024 15:48:10
-- Server version: 8.0.35
--

--
-- Disable foreign keys
--
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;

--
-- Set SQL mode
--
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

--
-- Set character set the client will use to send SQL statements to the server
--
SET NAMES 'utf8';

--
-- Set default database
--
USE QCDev;

--
-- Drop table `ApprovalStatus`
--
DROP TABLE IF EXISTS ApprovalStatus;

--
-- Drop procedure `spAddSolarCell`
--
DROP PROCEDURE IF EXISTS spAddSolarCell;

--
-- Drop table `IQCSolar`
--
DROP TABLE IF EXISTS IQCSolar;

--
-- Drop table `Rejected`
--
DROP TABLE IF EXISTS Rejected;

--
-- Drop table `IQCSolarDetails`
--
DROP TABLE IF EXISTS IQCSolarDetails;

--
-- Drop procedure `PersonRegister`
--
DROP PROCEDURE IF EXISTS PersonRegister;

--
-- Drop table `Person`
--
DROP TABLE IF EXISTS Person;

--
-- Drop table `Department`
--
DROP TABLE IF EXISTS Department;

--
-- Drop table `Designation`
--
DROP TABLE IF EXISTS Designation;

--
-- Drop table `WorkLocation`
--
DROP TABLE IF EXISTS WorkLocation;

--
-- Set default database
--
USE QCDev;

--
-- Create table `WorkLocation`
--
CREATE TABLE WorkLocation (
  LocationID varchar(255) NOT NULL,
  Location varchar(55) DEFAULT NULL,
  PRIMARY KEY (LocationID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create table `Designation`
--
CREATE TABLE Designation (
  DesignationID varchar(255) NOT NULL,
  Designation varchar(155) DEFAULT NULL,
  PRIMARY KEY (DesignationID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 8192,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create index `DesignationID` on table `Designation`
--
ALTER TABLE Designation
ADD UNIQUE INDEX DesignationID (DesignationID);

--
-- Create table `Department`
--
CREATE TABLE Department (
  DepartmentID varchar(255) NOT NULL,
  Department varchar(155) DEFAULT NULL,
  PRIMARY KEY (DepartmentID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 5461,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create table `Person`
--
CREATE TABLE Person (
  PersonID varchar(255) NOT NULL,
  EmployeeID varchar(255) DEFAULT NULL,
  Name varchar(50) DEFAULT NULL,
  LoginID varchar(55) DEFAULT NULL,
  Password varchar(155) DEFAULT NULL,
  WorkLocation varchar(55) DEFAULT NULL,
  Email varchar(50) DEFAULT NULL,
  Department varchar(55) DEFAULT NULL,
  ProfileImg varchar(255) DEFAULT NULL,
  Desgination varchar(55) DEFAULT NULL,
  PRIMARY KEY (PersonID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create index `EmployeeID` on table `Person`
--
ALTER TABLE Person
ADD UNIQUE INDEX EmployeeID (EmployeeID);

--
-- Create index `LoginID` on table `Person`
--
ALTER TABLE Person
ADD UNIQUE INDEX LoginID (LoginID);

--
-- Create foreign key
--
ALTER TABLE Person
ADD CONSTRAINT fk_Department FOREIGN KEY (Department)
REFERENCES Department (DepartmentID);

--
-- Create foreign key
--
ALTER TABLE Person
ADD CONSTRAINT fk_Designation FOREIGN KEY (Desgination)
REFERENCES Designation (DesignationID);

--
-- Create foreign key
--
ALTER TABLE Person
ADD CONSTRAINT fk_WorkLocation FOREIGN KEY (WorkLocation)
REFERENCES WorkLocation (LocationID);

DELIMITER $$

--
-- Create procedure `PersonRegister`
--
CREATE
DEFINER = 'admin'@'%'
PROCEDURE PersonRegister (pPersonid varchar(155),
pEmployeeId varchar(55),
pName varchar(55),
pLoginID varchar(55),
pPassword varchar(55),
pWorkLocation varchar(55),
pEmail varchar(55),
pDepartment varchar(55),
pProfileImg varchar(155),
pDesignation varchar(55))
BEGIN
  DECLARE vPersonID varchar(155);
  SET vPersonID = UUID();

  INSERT INTO Person (PersonID, EmployeeID, Name, LoginID, Password, WorkLocation, Email, Department, ProfileImg, Desgination)
    VALUES (vPersonID, pEmployeeId, pName, pLoginID, pPassword, pWorkLocation, pEmail, pDepartment, pProfileImg, pDesignation);


  SELECT
    vPersonID;
END
$$

DELIMITER ;

--
-- Create table `IQCSolarDetails`
--
CREATE TABLE IQCSolarDetails (
  SolarDetailID varchar(255) NOT NULL,
  LotSize varchar(255) DEFAULT NULL,
  SupplierName varchar(55) DEFAULT NULL,
  QuantityRecd varchar(55) DEFAULT NULL,
  InvoiceDate varchar(55) DEFAULT NULL,
  SupplierRMBatchNo varchar(255) DEFAULT NULL,
  RawMaterialSpecs varchar(255) DEFAULT NULL,
  QualityCheckDate varchar(55) DEFAULT NULL,
  SampleQuantityCheck varchar(55) DEFAULT NULL,
  InvoiceNo varchar(55) DEFAULT NULL,
  ReceiptDate varchar(55) DEFAULT NULL,
  DocumentNo varchar(155) DEFAULT NULL,
  RevisionNo varchar(155) DEFAULT NULL,
  CheckedBy varchar(255) DEFAULT NULL,
  Status varchar(155) NOT NULL,
  UpdatedBy varchar(255) DEFAULT NULL,
  CreatedDate varchar(155) DEFAULT NULL,
  UpdatedDate varchar(255) DEFAULT NULL,
  PRIMARY KEY (SolarDetailID)
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 4096,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create index `fk_ApprovedBy` on table `IQCSolarDetails`
--
ALTER TABLE IQCSolarDetails
ADD INDEX fk_ApprovedBy (UpdatedBy);

--
-- Create foreign key
--
ALTER TABLE IQCSolarDetails
ADD CONSTRAINT fk_CheckedBy FOREIGN KEY (CheckedBy)
REFERENCES Person (PersonID);

--
-- Create table `Rejected`
--
CREATE TABLE Rejected (
  RejectedID varchar(255) DEFAULT NULL,
  SolarDetailID varchar(255) DEFAULT NULL,
  CheckTypes varchar(555) DEFAULT NULL,
  Reason varchar(255) DEFAULT NULL,
  Result varchar(55) DEFAULT NULL,
  CreatedDate varchar(255) DEFAULT NULL,
  UpdatedDate varchar(255) DEFAULT NULL
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 16384,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create index `ReasonID` on table `Rejected`
--
ALTER TABLE Rejected
ADD UNIQUE INDEX ReasonID (RejectedID);

--
-- Create index `ReasonID_2` on table `Rejected`
--
ALTER TABLE Rejected
ADD UNIQUE INDEX ReasonID_2 (RejectedID);

--
-- Create foreign key
--
ALTER TABLE Rejected
ADD CONSTRAINT fk_SolarDetailID FOREIGN KEY (SolarDetailID)
REFERENCES IQCSolarDetails (SolarDetailID);

--
-- Create table `IQCSolar`
--
CREATE TABLE IQCSolar (
  IQCSolarID varchar(255) DEFAULT NULL,
  SolarDetailID varchar(155) DEFAULT NULL,
  CheckType varchar(155) DEFAULT NULL,
  Characterstics varchar(255) DEFAULT NULL,
  MeasuringMethod varchar(255) DEFAULT NULL,
  Sampling varchar(255) DEFAULT NULL,
  Reference varchar(155) DEFAULT NULL,
  AcceptanceCriteria varchar(255) DEFAULT NULL,
  Samples longtext DEFAULT NULL,
  CreatedDate varchar(255) DEFAULT NULL,
  UpdatedDate varchar(255) DEFAULT NULL
)
ENGINE = INNODB,
AVG_ROW_LENGTH = 2340,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE IQCSolar
ADD CONSTRAINT nk_SolarDetailID FOREIGN KEY (SolarDetailID)
REFERENCES IQCSolarDetails (SolarDetailID);

DELIMITER $$

--
-- Create procedure `spAddSolarCell`
--
CREATE
DEFINER = 'admin'@'%'
PROCEDURE spAddSolarCell (pLotSize int, pSupplierName varchar(55), pQuantityRecd varchar(155), pInvoiceDate varchar(55), pRMDetails varchar(255),
pQualityCheckDate varchar(55), pSampleQuantityCheck varchar(55), pInvoiceNo varchar(55), pRecieptDate varchar(55),
pDocumentNo varchar(55), pRevisionNo varchar(155), pCheckedBy varchar(155), pCheckType varchar(255),
pCharterstics varchar(255), pMeasuringMethod varchar(255), pSampling varchar(255), pReference varchar(155),
pAcceptanceCriteria varchar(255), pSamples varchar(255), pRejectionReason varchar(255))
BEGIN
  DECLARE vSolarDetailID varchar(155);
  DECLARE vDate date;
  DECLARE vRejectionReason varchar(255);

  SET vSolarDetailID = UUID();
  SET vDate = CURDATE();
  SET vRejectionReason = pRejectionReason;

  -- inserting Values into IQCSolarDetails Table
  INSERT INTO IQCSolarDetails (SolarDetailID, LotSize, SupplierName, QuantityRecd, InvoiceDate, RMDetails, QualityCheckDate, SampleQuantityCheck, InvoiceNo, ReceiptDate, DocumentNo, RevisionNo, CheckedBy, CreatedDate)
    VALUES (vSolarDetailID, pLotSize, pSupplierName, pQuantityRecd, pInvoiceDate, pRMDetails, pQualityCheckDate, pSampleQuantityCheck, pInvoiceNo, pRecieptDate, pDocumentNo, pRevisionNo, pCheckedBy, vDate);

  -- inserting Values into IQCSolar Table
  INSERT INTO IQCSolar (IQCSolarID, SolarDetailID, CheckType, Characterstics, MeasuringMethod, Sampling, Reference, AcceptanceCriteria, Samples, CreatedDate)
    VALUES (UUID(), vSolarDetailID, pCheckType, pCharterstics, pMeasuringMethod, pSampling, pReference, pAcceptanceCriteria, pSamples, vDate);

  -- inserting Values into Rejected Table
  INSERT INTO Rejected (RejectedID, SolarDetailID, RejectionReason, CreatedDate)
    VALUES (UUID(), vSolarDetailID, vRejectionReason, vDate);

END
$$

DELIMITER ;

--
-- Create table `ApprovalStatus`
--
CREATE TABLE ApprovalStatus (
  SolarDetailID varchar(255) DEFAULT NULL,
  ApprovalStatusID varchar(255) NOT NULL,
  Status varchar(255) DEFAULT NULL,
  Reason varchar(255) DEFAULT NULL,
  CreatedBy varchar(255) DEFAULT NULL,
  CreatedOn varchar(255) DEFAULT NULL,
  UpdatedOn varchar(255) DEFAULT NULL,
  PRIMARY KEY (ApprovalStatusID)
)
ENGINE = INNODB,
CHARACTER SET utf8mb4,
COLLATE utf8mb4_0900_ai_ci,
ROW_FORMAT = DYNAMIC;

--
-- Create foreign key
--
ALTER TABLE ApprovalStatus
ADD CONSTRAINT fk_ApprovalCreated FOREIGN KEY (CreatedBy)
REFERENCES Person (PersonID);

--
-- Create foreign key
--
ALTER TABLE ApprovalStatus
ADD CONSTRAINT fk_ApprovalSolarDetailID FOREIGN KEY (SolarDetailID)
REFERENCES IQCSolarDetails (SolarDetailID);

-- 
-- Dumping data for table WorkLocation
--
INSERT INTO WorkLocation VALUES
('fc9c8db9-e817-11ee-b439-0ac93defbbf1', 'Unit1'),
('fc9c906b-e817-11ee-b439-0ac93defbbf1', 'Unit2'),
('fc9c9178-e817-11ee-b439-0ac93defbbf1', 'Unit3');

-- 
-- Dumping data for table Designation
--
INSERT INTO Designation VALUES
('1af9d9f7-e817-11ee-b439-0ac93defbbf1', 'QC'),
('d66d6ab7-e2ab-11ee-974e-12d6db81f661', 'Admin'),
('d66db440-e2ab-11ee-974e-12d6db81f661', 'Super Admin');

-- 
-- Dumping data for table Department
--
INSERT INTO Department VALUES
('84949eb1-e816-11ee-b439-0ac93defbbf1', 'IQCP'),
('849684af-e816-11ee-b439-0ac93defbbf1', 'FQCP'),
('849b50dd-e816-11ee-b439-0ac93defbbf1', 'IPQC');

-- 
-- Dumping data for table Person
--
INSERT INTO Person VALUES
('5a114928-e8f3-11ee-b439-0ac93defbbf1', 'Emp001', 'Test', 'QCM2', 'Test@3547', 'fc9c9178-e817-11ee-b439-0ac93defbbf1', 'krishukumar7827@gmail.com', '84949eb1-e816-11ee-b439-0ac93defbbf1', 'https://qcm-project-bucket.s3.ap-south-1.amazonaws.com/5a114928-e8f3-11ee-b439-0ac93defbbf1', '1af9d9f7-e817-11ee-b439-0ac93defbbf1'),
('897d6163-e82b-11ee-b439-0ac93defbbf1', 'em1', 'Neha Sharma ', 'QCM1', 'Neha@5273', 'fc9c8db9-e817-11ee-b439-0ac93defbbf1', 'krishukumar7827@gmail.com', '84949eb1-e816-11ee-b439-0ac93defbbf1', 'https://qcm-project-bucket.s3.ap-south-1.amazonaws.com/897d6163-e82b-11ee-b439-0ac93defbbf1', 'd66db440-e2ab-11ee-974e-12d6db81f661');

-- 
-- Dumping data for table IQCSolarDetails
--
INSERT INTO IQCSolarDetails VALUES
('06506a9a-ff0b-4022-8d9e-fcbef6afed54', '33', 'yyytgyuu', '', '2024-03-27', '876', 'ergtttt', '2024-03-28', '', 'ytryukj', '2024-03-28', 'GSPL/SC(IQC)/001', 'Ver2.0/13-03-2024', '897d6163-e82b-11ee-b439-0ac93defbbf1', 'Pending', '', '28-03-2024 09:00:59', ''),
('d3abbf3b-a4d6-4925-af10-01040e31c756', '7', 'dsd', '', '2024-03-28', '526', 'frrrt', '2024-03-28', '', 'dswr', '2024-03-28', 'GSPL/SC(IQC)/001', 'Ver2.0/13-03-2024', '897d6163-e82b-11ee-b439-0ac93defbbf1', 'Approved', '897d6163-e82b-11ee-b439-0ac93defbbf1', '28-03-2024 06:38:51', '28-03-2024 08:53:46');

-- 
-- Dumping data for table Rejected
--
INSERT INTO Rejected VALUES
('88ad7403-a4e3-45e9-953b-b90626000e30', 'd3abbf3b-a4d6-4925-af10-01040e31c756', '[{"Packaging":false},{"Visual":true},{"Physical":false},{"FrontBus":true},{"Verification":false},{"Electrical":false},{"Performance":false}]', 'dfjuy', 'Fail', '28-03-2024 06:38:53', ''),
('8086f545-df91-42f0-ab6c-48c72f91f93a', '06506a9a-ff0b-4022-8d9e-fcbef6afed54', '[{"Packaging":false},{"Visual":false},{"Physical":false},{"FrontBus":false},{"Verification":false},{"Electrical":false},{"Performance":false}]', '', 'Pass', '28-03-2024 09:01:01', '');

-- 
-- Dumping data for table IQCSolar
--
INSERT INTO IQCSolar VALUES
('043a6be6-f533-40c7-9963-68fb4e2b69da', 'd3abbf3b-a4d6-4925-af10-01040e31c756', 'Packaging', 'Packing (Make type and rating)', 'Visual Inspection', 'Whole Lot', 'PO/INVOICE', 'No Physical Damage / No Mismatch against PO/Invoice', '[{"PackageSampleBarcode1":"","PackageSampleTest1":false,"PackageSampleRemarks1":"fftrrv"},{"PackageSampleBarcode2":"","PackageSampleTest2":true,"PackageSampleRemarks2":""}]', '28-03-2024 06:38:52', ''),
('0cf09b4a-1202-4b6b-8334-06060e128629', 'd3abbf3b-a4d6-4925-af10-01040e31c756', 'Visual', 'Color Variation, Cell Chip, Cell Crack, Grid Miss, Grid Line cut, Print Shift, Oxidation, Spot on cell', 'Verner Calliper/Measuring Scale', 'SIL S1 AQL 6.5', 'GSPL Technical Specification / Supplier COC', 'As GSPL Technical Specification / Acceptance Criteria', '[{"VisualSampleBarcode1":"","VisualSampleTest1":false,"VisualSampleRemarks1":"dhgt"},{"VisualSampleBarcode2":"","VisualSampleTest2":true,"VisualSampleRemarks2":""}]', '28-03-2024 06:38:52', ''),
('3afdf847-9038-44b3-b606-4b08c8f7f564', 'd3abbf3b-a4d6-4925-af10-01040e31c756', 'Physical', 'Dimension(L X W X T)', 'Verner Calliper/Measuring Scale', 'SIL S1 AQL 6.5', 'GSPL Technical Specification / Supplier COC', 'COC', '[{"PhysicalSampleBarcode1":"","PhysicalSampleTest1":false,"PhysicalSampleRemarks1":"ghy"},{"PhysicalSampleBarcode2":"","PhysicalSampleTest2":false,"PhysicalSampleRemarks2":"hgytr"}]', '28-03-2024 06:38:52', ''),
('7c7ff3ac-6071-413c-a0f0-6f8e4ab085dc', 'd3abbf3b-a4d6-4925-af10-01040e31c756', 'FrontBus', 'Width', 'Verner Calliper/Measuring Scale', '5 Pcs / Lot', 'GSPL Technical Specification / Supplier COC', 'COC', '[{"FrontbusSampleBarcode1":"","FrontbusSampleTest1":false,"FrontbusSampleRemarks1":"tyl"}]', '28-03-2024 06:38:52', ''),
('647106b8-5266-4589-bbb0-ab07f342513e', 'd3abbf3b-a4d6-4925-af10-01040e31c756', 'Verification', 'Electrical Paramiter', 'Cell Tester', 'SIL S1 AQL 6.5', 'GSPL Technical Specification', 'COC', '[{"VerificationSampleBarcode1":"","VerificationSampleTest1":false,"VerificationSampleRemarks1":"sdre"},{"VerificationSampleBarcode2":"","VerificationSampleTest2":true,"VerificationSampleRemarks2":""},{"VerificationSampleBarcode3":"","VerificationSampleTest3":false,"VerificationSampleRemarks3":"ghyt"}]', '28-03-2024 06:38:53', ''),
('0f54432b-dcff-4fd9-b840-900d5f2857f3', 'd3abbf3b-a4d6-4925-af10-01040e31c756', 'Electrical', 'LID(Light Inducted Degradation)/Preconditioning', 'Sunsimulator', 'One Module per supplier(each month)', 'GSPL Technical Specification', 'COC', '[{"ElectricalSampleBarcode1":"","ElectricalSampleTest1":true,"ElectricalSampleRemarks1":""}]', '28-03-2024 06:38:53', ''),
('2e47042f-e804-4111-85bf-f4d9b6860af3', 'd3abbf3b-a4d6-4925-af10-01040e31c756', 'Performance', 'Soidering Peel Test', 'Peel Tester', '5 Cell/Lot', 'GSPL Technical Specification', '1 N to 2N-Cell Frontside 1N to 4N Cell Back side', '[{"PerformanceSampleBarcode1":"","PerformanceSampleTest1":true,"PerformanceSampleRemarks1":""},{"PerformanceSampleBarcode2":"","PerformanceSampleTest2":false,"PerformanceSampleRemarks2":"dfty"}]', '28-03-2024 06:38:53', ''),
('b7650ab4-e884-40ad-a292-12ba43bec014', '06506a9a-ff0b-4022-8d9e-fcbef6afed54', 'Packaging', 'Packing (Make type and rating)', 'Visual Inspection', 'Whole Lot', 'PO/INVOICE', 'No Physical Damage / No Mismatch against PO/Invoice', '[{"PackageSampleBarcode1":"","PackageSampleTest1":false,"PackageSampleRemarks1":"gdh"}]', '28-03-2024 09:00:59', ''),
('2a5a7aca-8089-4439-817f-7f9b798bf84c', '06506a9a-ff0b-4022-8d9e-fcbef6afed54', 'Visual', 'Color Variation, Cell Chip, Cell Crack, Grid Miss, Grid Line cut, Print Shift, Oxidation, Spot on cell', 'Verner Calliper/Measuring Scale', 'SIL S1 AQL 6.5', 'GSPL Technical Specification / Supplier COC', 'As GSPL Technical Specification / Acceptance Criteria', '[{"VisualSampleBarcode1":"","VisualSampleTest1":false,"VisualSampleRemarks1":"fsgg"}]', '28-03-2024 09:00:59', ''),
('7f568db4-68ad-4c55-a425-c2151ccf1ab3', '06506a9a-ff0b-4022-8d9e-fcbef6afed54', 'Physical', 'Dimension(L X W X T)', 'Verner Calliper/Measuring Scale', 'SIL S1 AQL 6.5', 'GSPL Technical Specification / Supplier COC', 'COC', '[{"PhysicalSampleBarcode1":"","PhysicalSampleTest1":false,"PhysicalSampleRemarks1":"goll"},{"PhysicalSampleBarcode2":"","PhysicalSampleTest2":true,"PhysicalSampleRemarks2":""},{"PhysicalSampleBarcode3":"","PhysicalSampleTest3":false,"PhysicalSampleRemarks3":"tiitft"}]', '28-03-2024 09:00:59', ''),
('61f80ed6-539e-44d0-94a5-5446a6922172', '06506a9a-ff0b-4022-8d9e-fcbef6afed54', 'FrontBus', 'Width', 'Verner Calliper/Measuring Scale', '5 Pcs / Lot', 'GSPL Technical Specification / Supplier COC', 'COC', '[{"FrontbusSampleBarcode1":"","FrontbusSampleTest1":false,"FrontbusSampleRemarks1":"rwhu"}]', '28-03-2024 09:01:00', ''),
('28a76dde-c518-464e-b842-ce24660a56a5', '06506a9a-ff0b-4022-8d9e-fcbef6afed54', 'Verification', 'Electrical Paramiter', 'Cell Tester', 'SIL S1 AQL 6.5', 'GSPL Technical Specification', 'COC', '[{"VerificationSampleBarcode1":"","VerificationSampleTest1":false,"VerificationSampleRemarks1":"wruu"}]', '28-03-2024 09:01:00', ''),
('61145cbd-e908-44f1-b8e5-a587a892e375', '06506a9a-ff0b-4022-8d9e-fcbef6afed54', 'Electrical', 'LID(Light Inducted Degradation)/Preconditioning', 'Sunsimulator', 'One Module per supplier(each month)', 'GSPL Technical Specification', 'COC', '[{"ElectricalSampleBarcode1":"","ElectricalSampleTest1":false,"ElectricalSampleRemarks1":"wry"}]', '28-03-2024 09:01:00', ''),
('5c319973-3709-4cad-ae9b-1532ef254ab2', '06506a9a-ff0b-4022-8d9e-fcbef6afed54', 'Performance', 'Soidering Peel Test', 'Peel Tester', '5 Cell/Lot', 'GSPL Technical Specification', '1 N to 2N-Cell Frontside 1N to 4N Cell Back side', '[{"PerformanceSampleBarcode1":"","PerformanceSampleTest1":false,"PerformanceSampleRemarks1":"htjg"},{"PerformanceSampleBarcode1":"","PerformanceSampleTest1":false,"PerformanceSampleRemarks1":"htjg"}]', '28-03-2024 09:01:01', '');

-- 
-- Dumping data for table ApprovalStatus
--
INSERT INTO ApprovalStatus VALUES
('d3abbf3b-a4d6-4925-af10-01040e31c756', '0666d811-60a3-4ea2-b5da-372ccf0471f5', 'Rejected', 'product not', '897d6163-e82b-11ee-b439-0ac93defbbf1', '28-03-2024 08:52:10', NULL),
('d3abbf3b-a4d6-4925-af10-01040e31c756', '101f9a64-61af-47f9-a9bc-88513b7d3c72', 'Rejected', 'Product was Broken', '5a114928-e8f3-11ee-b439-0ac93defbbf1', '28-03-2024 13:01:53', NULL),
('d3abbf3b-a4d6-4925-af10-01040e31c756', 'a7843380-d3b8-4106-8526-33fc919a414a', 'Approved', 'Product was Broken', '5a114928-e8f3-11ee-b439-0ac93defbbf1', '28-03-2024 13:02:34', NULL),
('d3abbf3b-a4d6-4925-af10-01040e31c756', 'bba6db26-1892-4eb2-bdff-2af98b0dd991', 'Approved', '', '897d6163-e82b-11ee-b439-0ac93defbbf1', '28-03-2024 08:53:46', NULL);

--
-- Restore previous SQL mode
--
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;

--
-- Enable foreign keys
--
/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;